name: Security Scanner

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Mondays at 2 AM
  workflow_dispatch:
    inputs:
      target:
        description: 'Target to scan'
        required: true
        default: 'example.com'
      scan_type:
        description: 'Scan type'
        required: true
        default: 'quick'
        type: choice
        options:
        - quick
        - full
        - api-only
        - cloud-only

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl wget git openssl dnsutils whois
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install security tools
      run: |
        # Install Go-based security tools
        go install github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
        go install github.com/projectdiscovery/httpx/cmd/httpx@latest
        go install github.com/projectdiscovery/naabu/v2/cmd/naabu@latest
        go install github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
        go install github.com/projectdiscovery/katana/cmd/katana@latest
        go install github.com/lc/gau/v2/cmd/gau@latest
        
        # Add Go bin to PATH
        echo "$HOME/go/bin" >> $GITHUB_PATH
        
    - name: Update Nuclei templates
      run: |
        nuclei -update-templates
        
    - name: Run security scan
      env:
        SHODAN_API: ${{ secrets.SHODAN_API_KEY }}
        VIRUSTOTAL_API: ${{ secrets.VIRUSTOTAL_API_KEY }}
      run: |
        # Determine target and scan type
        TARGET="${{ github.event.inputs.target || 'testphp.vulnweb.com' }}"
        SCAN_TYPE="${{ github.event.inputs.scan_type || 'quick' }}"
        
        # Run the security scanner
        python3 cicd_integration.py \
          --target "$TARGET" \
          --scan-type "$SCAN_TYPE" \
          --output-format sarif \
          --output-file security-results.sarif \
          --fail-on high \
          --timeout 3600
          
    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: security-results.sarif
        category: security-scanner
        
    - name: Generate security report
      if: always()
      run: |
        # Generate additional formats for artifact upload
        python3 cicd_integration.py \
          --target "${{ github.event.inputs.target || 'testphp.vulnweb.com' }}" \
          --scan-type "${{ github.event.inputs.scan_type || 'quick' }}" \
          --output-format json \
          --output-file security-results.json \
          --fail-on high \
          --timeout 3600
          
    - name: Upload security artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: |
          security-results.sarif
          security-results.json
          runs/
          logs/
        retention-days: 30
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          try {
            const results = JSON.parse(fs.readFileSync('security-results.json', 'utf8'));
            const summary = results.summary;
            
            const comment = `## üõ°Ô∏è Security Scan Results
            
            **Target:** \`${results.scan_info.target}\`
            **Scan Type:** \`${results.scan_info.scan_type}\`
            **Duration:** ${Math.round(results.scan_info.duration)}s
            
            ### Summary
            - **Total Vulnerabilities:** ${summary.total_vulns}
            - **Critical:** ${summary.by_severity.critical}
            - **High:** ${summary.by_severity.high}
            - **Medium:** ${summary.by_severity.medium}
            - **Low:** ${summary.by_severity.low}
            
            ${summary.by_severity.critical > 0 || summary.by_severity.high > 0 ? 
              '‚ö†Ô∏è **Action Required:** Critical or High severity vulnerabilities found!' : 
              '‚úÖ **No critical issues found**'}
            
            <details>
            <summary>View Details</summary>
            
            ${results.vulnerabilities.slice(0, 10).map(v => 
              `- **${v.severity.toUpperCase()}**: ${v.name} (${v.id})`
            ).join('\n')}
            
            ${results.vulnerabilities.length > 10 ? 
              `\n... and ${results.vulnerabilities.length - 10} more` : ''}
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not create comment:', error);
          }
                      - name: Upload a Build Artifact
  uses: actions/upload-artifact@v4.6.2
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
    # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.

    compression-level: # optional, default is 6
    # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

    overwrite: # optional, default is false
    # If true, hidden files will be included in the artifact. If false, hidden files will be excluded from the artifact.

    include-hidden-files: # optional, default is false
name: Caching Primes

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Restore cached Primes
      id: cache-primes-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${{ runner.os }}-primes
    .
    . //intermediate workflow steps
    .
    - name: Save Primes
      id: cache-primes-save
      uses: actions/cache/save@v4
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${  - uses: actions/cache@v4
    with:
      path: |
        path/to/dependencies
        some/other/dependencies
      key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
   { steps.cache-prim  # http://man7.org/linux/man-pages/man1/date.1.html
  - name: Get Date
    id: get-date
    run: |
      echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
    shell: bash

  - uses: actions/cache@v4
    with:
      path: path/to/dependencies
      key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/lockfiles') }}es-restore.outputs.cache-primary-key 
                  - name: Setup Node.js environment
  uses: actions/setup-node@v5.0.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Set to false to disable automatic caching based on the package manager field in package.json. By default, caching is enabled if the package manager field is present.
    package-manager-cache: # optional, default is true
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    # Used to specify an alternative mirror to downlooad Node.js binaries from
    mirror: # optional
    # The token used as Authorization header when fetching from the mirror
    mirror-token: # optional
                      - name: Setup Go environment
  uses: actions/setup-go@v6.0.0
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
    go-version: # optional
    # Path to the go.mod or go.work file.
    go-version-file: # optional
    # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
    cache: # optional, default is true
    # Used to specify the path to a dependency file - go.sum
    cache-dependency-path: # optional
    # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
                      - name: Setup Node.js environment
  uses: actions/setup-node@v5.0.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Set to false to disable automatic caching based on the package manager field in package.json. By default, caching is enabled if the package manager field is present.
    package-manager-cache: # optional, default is true
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    # Used to specify an alternative mirror to downlooad Node.js binaries from
    mirror: # optional
    # The token used as Authorization header when fetching from the mirror
    mirror-token: # optional
                      - name: First interaction
  uses: actions/first-interaction@v1.3.0
  with:
    # Token for the repository. Can be passed in using {{ secrets.GITHUB_TOKEN }}
    repo-token: 
    # Comment to post on an individual's first issue
    issue-message: # optional
    # Comment to post on an individual's first pull request
    pr-message: # optional
                      - name: Close Stale Issues
  uses: actions/stale@v10.0.0
  with:
    # Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`.
    repo-token: # optional, default is ${{ github.token }}
    # The message to post on the issue when tagging it. If none provided, will not mark issues stale.
    stale-issue-message: # optional
    # The message to post on the pull request when tagging it. If none provided, will not mark pull requests stale.
    stale-pr-message: # optional
    # The message to post on the issue when closing it. If none provided, will not comment when closing an issue.
    close-issue-message: # optional
    # The message to post on the pull request when closing it. If none provided, will not comment when closing a pull requests.
    close-pr-message: # optional
    # The number of days old an issue or a pull request can be before marking it stale. Set to -1 to never mark issues or pull requests as stale automatically.
    days-before-stale: # optional, default is 60
    # The number of days old an issue can be before marking it stale. Set to -1 to never mark issues as stale automatically. Override "days-before-stale" option regarding only the issues.
    days-before-issue-stale: # optional
    # The number of days old a pull request can be before marking it stale. Set to -1 to never mark pull requests as stale automatically. Override "days-before-stale" option regarding only the pull requests.
    days-before-pr-stale: # optional
    # The number of days to wait to close an issue or a pull request after it being marked stale. Set to -1 to never close stale issues or pull requests.
    days-before-close: # optional, default is 7
    # The number of days to wait to close an issue after it being marked stale. Set to -1 to never close stale issues. Override "days-before-close" option regarding only the issues.
    days-before-issue-close: # optional
    # The number of days to wait to close a pull request after it being marked stale. Set to -1 to never close stale pull requests. Override "days-before-close" option regarding only the pull requests.
    days-before-pr-close: # optional
    # The label to apply when an issue is stale.
    stale-issue-label: # optional, default is Stale
    # The label to apply when an issue is closed.
    close-issue-label: # optional
    # The labels that mean an issue is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-issue-labels: # optional, default is 
    # The reason to use when closing an issue.
    close-issue-reason: # optional, default is not_planned
    # The label to apply when a pull request is stale.
    stale-pr-label: # optional, default is Stale
    # The label to apply when a pull request is closed.
    close-pr-label: # optional
    # The labels that mean a pull request is exempt from being marked as stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-pr-labels: # optional, default is 
    # The milestones that mean an issue or a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2").
    exempt-milestones: # optional, default is 
    # The milestones that mean an issue is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the issues.
    exempt-issue-milestones: # optional, default is 
    # The milestones that mean a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the pull requests.
    exempt-pr-milestones: # optional, default is 
    # Exempt all issues and pull requests with milestones from being marked as stale. Default to false.
    exempt-all-milestones: # optional, default is false
    # Exempt all issues with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the issues.
    exempt-all-issue-milestones: # optional, default is 
    # Exempt all pull requests with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the pull requests.
    exempt-all-pr-milestones: # optional, default is 
    # Only issues or pull requests with all of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    only-labels: # optional, default is 
    # Only issues or pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    any-of-labels: # optional, default is 
    # Only issues with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the issues.
    any-of-issue-labels: # optional, default is 
    # Only pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the pull requests.
    any-of-pr-labels: # optional, default is 
    # Only issues with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the issues.
    only-issue-labels: # optional, default is 
    # Only pull requests with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the pull requests.
    only-pr-labels: # optional, default is 
    # The maximum number of operations per run, used to control rate limiting (GitHub API CRUD related).
    operations-per-run: # optional, default is 30
    # Remove stale labels from issues and pull requests when they are updated or commented on.
    remove-stale-when-updated: # optional, default is true
    # Remove stale labels from issues when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the issues.
    remove-issue-stale-when-updated: # optional, default is 
    # Remove stale labels from pull requests when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the pull requests.
    remove-pr-stale-when-updated: # optional, default is 
    # Run the processor in debug mode without actually performing any operations on live issues.
    debug-only: # optional, default is false
    # The order to get issues or pull requests. Defaults to false, which is descending.
    ascending: # optional, default is false
    # What to sort results by. Valid options are `created`, `updated`, and `comments`. Defaults to `created`.
    sort-by: # optional, default is created
    # Delete the git branch after closing a stale pull request.
    delete-branch: # optional, default is false
    # The date used to skip the stale action on issue/pull request created before it (ISO 8601 or RFC 2822).
    start-date: # optional, default is 
    # The assignees which exempt an issue or a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2").
    exempt-assignees: # optional, default is 
    # The assignees which exempt an issue from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the issues.
    exempt-issue-assignees: # optional, default is 
    # The assignees which exempt a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the pull requests.
    exempt-pr-assignees: # optional, default is 
    # Exempt all issues and pull requests with assignees from being marked as stale. Default to false.
    exempt-all-assignees: # optional, default is false
    # Exempt all issues with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the issues.
    exempt-all-issue-assignees: # optional, default is 
    # Exempt all pull requests with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the pull requests.
    exempt-all-pr-assignees: # optional, default is 
    # Exempt draft pull requests from being marked as stale. Default to false.
    exempt-draft-pr: # optional, default is false
    # Display some statistics at the end regarding the stale workflow (only when the logs are enabled).
    enable-statistics: # optional, default is true
    # A comma delimited list of labels to add when an issue or pull request becomes unstale.
    labels-to-add-when-unstale: # optional, default is 
    # A comma delimited list of labels to remove when an issue or pull request becomes stale.
    labels-to-remove-when-stale: # optional, default is 
    # A comma delimited list of labels to remove when an issue or pull request becomes unstale.
    labels-to-remove-when-unstale: # optional, default is 
    # Any update (update/comment) can reset the stale idle time on the issues and pull requests.
    ignore-updates: # optional, default is false
    # Any update (update/comment) can reset the stale idle time on the issues. Override "ignore-updates" option regarding only the issues.
    ignore-issue-updates: # optional, default is 
    # Any update (update/comment) can reset the stale idle time on the pull requests. Override "ignore-updates" option regarding only the pull requests.
    ignore-pr-updates: # optional, default is 
    # Only the issues or the pull requests with an assignee will be marked as stale automatically.
    include-only-assigned: # optional, default is false
                    - name: SecureStack Application Composition Analysis
  # You may pin to the exact commit or the version.
  # uses: SecureStackCo/actions-code@c2c35840882d041474c505c1045da157025cd57e
  uses: SecureStackCo/actions-code@v0.1.1
  with:
    # SecureStack API key - generate an API key at https://app.securestack.com
    securestack_api_key: 
    # SecureStack Application ID - can be retrieved by accessing required application at https://app.securestack.com
    securestack_app_id: 
    # Severities lower than this value will be reported in the workflow console but will not cause an error for the action; value should be one of: critical | high | medium | low
    severity: 
    # Severities lower than this value will be reported in the workflow console but will not cause an error for the action; value should be one of: critical | high | medium | low
    language: 
    # Optional flags for the bloodhound-cli code command - run bloodhound cli code --help for more details
    flags: # optional, default is 
                        - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v5.0.0
  with:
    # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
    dotnet-version: # optional
    # Optional quality of the build. The possible values are: daily, signed, validated, preview, ga.
    dotnet-quality: # optional
    # Optional global.json location, if your global.json isn't located in the root of the repo.
    global-json-file: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    # Optional input to enable caching of the NuGet global-packages folder
    cache: # optional
    # Used to specify the path to a dependency file: packages.lock.json. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
                      - name: SecureStack All-In-One GitHub Action
  # You may pin to the exact commit or the version.
  # uses: SecureStackCo/actions-all-in-one@96dc79a3c4081a8333040c6bf84b0c528ccb1eb9
  uses: SecureStackCo/actions-all-in-one@v0.1.2
  with:
    # SecureStack API key - generate an API key at https://app.securestack.com
    securestack_api_key: 
    # SecureStack Application ID - can be retrieved by accessing required application at https://app.securestack.com
    securestack_app_id: 
    # Severities lower than this value will be reported in the workflow console but will not cause an error for the action; value should be one of: critical | high | medium | low
    severity: 
                      - name: Montara CI
  # You may pin to the exact commit or the version.
  # uses: montara-io/montara-ci@eca5afc53f2e39c847d187e4bf43b1bef9e1056e
  uses: montara-io/montara-ci@v1.0.20
  with:
    # The URL of the webhook
    webhookUrl: 
    # Whether to use smart run, defaults to true
    isSmartRun: # optional, default is true
    # The variables to pass to the test run, a stringified JSON object of key-value pairs. for example: {"var1": "value1", "var2": "value2"}
    variables: # optional
    # Whether to allow concurrent pipeline runs, defaults to true
    allowConcurrentPipelineRuns: # optional, default is true
    # The number of retries to attempt
    numRetries: # optional, default is 60
                      - name: Run python black code formatter
  # You may pin to the exact commit or the version.
  # uses: DataDog/action-py-black-formatter@bebd29d1572a82c8e4a9de3c42c1592529a7d6af
  uses: DataDog/action-py-black-formatter@v2.5
  with:
    # Black additional input arguments.
    additional_args: # optional, default is 
    # Exit code when black formatting errors are found [true, false]. Defaults to 'true'.

    fail_on_error: # optional, default is true
    # Main branch of the repository to speed up incremental diff

    main_branch: # optional, default is main
    # (--quiet) Don't emit non-error messages to stderr. Errors are still emitted; silence 
  those with 2>/dev/null

    quiet_mode: # optional, default is false
    # (--diff) Don't write the files back, just output a diff for each file on stdout.

    print_diff_mode: # optional, default is false
    # (--check) Don't write the files back, just return the status. Return code 0 means nothing 
  would change. Return code 1 means some files would be reformatted. Return code 123 means
  there was an internal error.

    check_mode: # optional, default is false
    # Turn on if you only want to check changed files instead of all files.

    only_changed_files: # optional, default is false
    # Sha of the commit to compare files to.

    base_commit: # optional, default is 
          
                   - name: github-action-auto-format
  # You may pin to the exact commit or the version.
  # uses: cloudposse/github-action-auto-format@970af4c15a720047204400fe5b5ae52fb2991e9b
  uses: cloudposse/github-action-auto-format@v0.12.0
  with:
    # The path on the github-runner where the auto-format action scripts are checked out at runtime
    actions-files-checkout-path: # optional, default is github-action-auto-format
    # GitHub username for writing new commits
    bot-name: # optional, default is cloudpossebot
    # Email address associated with the GitHub user for writing new commits
    bot-email: # optional
    # Name of formatting task to execute. (Options include: readme, github, terraform, and context.)
    format-task: 
    # GitHub Token for use in `github_format.sh` and PR creation steps. This token must be granted `workflows` permissions.
    workflow-token: 
                   - name: Designite Incremental Code Quality Analysis
  # You may pin to the exact commit or the version.
  # uses: DesigniteTools/designite-incremental-analysis@c9ec3cf4d058aa09194f2285f3e8f299cfdfd66f
  uses: DesigniteTools/designite-incremental-analysis@v2.1.0
  with:
    # GitHub token created during workflow execution (Set to Read and Write)
    github-token: 
    # Code quality analysis output folder name from previous commit
    designite-output-old: 
    # Code quality analysis output folder name from current commit
    designite-output-new: 
    # Repository name
    repo-name: 
    # Tool used for code analysis (dj or dpy)
    tool-name: 
                   - name: Codacy CLI V2
  # You may pin to the exact commit or the version.
  # uses: codacy/codacy-cli-v2-action@be2c794209715d99f18b58fce771b3ecbe1cff96
  uses: codacy/codacy-cli-v2-action@0.2.0
  with:
    # Only run a specific tool or tool category (eslint, stylelint, etc). For the full list of tools, see https://docs.codacy.com/repositories-configure/codacy-configuration-file/#which-tools-can-be-configured-and-which-name-should-i-use default: "eslint"
    tool: # optional
    # The path to the SARIF file to upload.
    sarif_file_path: # optional, default is ./report.sarif
    # Upload the report to Codacy.
    upload_report: # optional, default is false
    # The project token to use for the analysis.
    project_token: 
    # User level token for Codacy API.
    api_token: # optional
    # Provider name (e.g., gh, gl, bb).
    provider: # optional
    # Repository owner.
    owner: # optional
    # Repository name.
    repository: # optional
    # Eventual registry address.
    registry: # optional, default is 
                       - name: DPy Action
  # You may pin to the exact commit or the version.
  # uses: DesigniteTools/DPyAction@aadeb1dde588e7163728d6fe48a8273284619325
  uses: DesigniteTools/DPyAction@v1.2.1
  with:
    # Personal access token
    PAT: # optional, default is No PAT provided
    # Designite license key - optional
    D_KEY: # optional, default is No key
    # Operating System of the runner to choose the appropriate DPy binary
    OS: # optional, default is linux
    # Branch to analyze - optional
    BRANCH: # optional, default is main
    # Output format - optional
    FORMAT: # optional, default is csv
    # DCode API key for authentication
    API_KEY: # optional
    # DCode project ID
    PROJECT_ID: # optional
                         - name: Python Lint Code Scanning Action
  # You may pin to the exact commit or the version.
  # uses: advanced-security/python-lint-code-scanning-action@935afeca136966a98a6821b73d4ae02aab9f339b
  uses: advanced-security/python-lint-code-scanning-action@v1.1.2
  with:
    # The linter to use
    linter: # default is flake8
    # The target to lint
    target: # default is ${{ github.workspace }}
    # The output file
    output: # optional, default is python_linter.sarif
    # The version of python to use
    python-version: # optional, default is 3.10
    # The version of ruff to use
    ruff-version: # optional, default is latest
    # The version of flake8 to use
    flake8-version: # optional, default is latest
    # The version of pylint to use
    pylint-version: # optional, default is latest
    # The version of mypy to use
    mypy-version: # optional, default is latest
    # The version of pyright to use
    pyright-version: # optional, default is latest
    # The version of pytype to use
    pytype-version: # optional, default is latest
    # The version of fixit to use
    fixit-version: # optional, default is latest
    # The version of pyre to use
    pyre-version: # optional, default is latest
    # The version of typeshed to use
    typeshed-version: # optional, default is main
                - name: Super-Linter
  # You may pin to the exact commit or the version.
  # uses: super-linter/super-linter@b92721f792f381cedc002ecdbb9847a15ece5bb8
  uses: super-linter/super-linter@v7.1.0
                      - name: Y(A)ML Schema Validator
  # You may pin to the exact commit or the version.
  # uses: SoftCreatR/validate-yaml-schema@c70c928bcbf4dc749fd6f957b1d327fea16af39e
  uses: SoftCreatR/validate-yaml-schema@v2.0.0
  with:
    # Location of schema configuration file
    settingsFile: # optional, default is .vscode/settings.json
    # The yaml.schemas config as inline JSON
    yamlSchemasJson: # optional
                      - name: bryk-io/govuln-scan
  # You may pin to the exact commit or the version.
  # uses: bryk-io/govuln-scan-action@bfbd9e5bd82fc688c97f7e81df84764559195b80
  uses: bryk-io/govuln-scan-action@v0.1.0
                      - name: Create Release With Tag
  # You may pin to the exact commit or the version.
  # uses: badico-cloud-hub/create-release-with-tag@2224950683aba50c131efafce2d251d74a8dad75
  uses: badico-cloud-hub/create-release-with-tag@v1
  with:
    # Branch for release in repository
    branch: # optional, default is ${{github.event.repository.default_branch}}
    # Tag name for release
    tag: 
    # Just set tag
    just-tag: # optional
    # Token with credentials for repository
    gh-token: # default is ${{ github.token }}
    # Tag name for append in commit
    append-tag: # optional
    # Set append-tag name to uppercase
    upper: # optional
          
                     - name: Pachyderm Pipeline Updater
  # You may pin to the exact commit or the version.
  # uses: pachyderm/pachyderm-actions@69c4694668a732392b203fab5b8dbdc14b8a097c
  uses: pachyderm/pachyderm-actions@0.0.1
                  - name: Setup Flowpipe
  # You may pin to the exact commit or the version.
  # uses: turbot/flowpipe-action-setup@cb25645f42ae071a051b83fcac8a6efe76462af8
  uses: turbot/flowpipe-action-setup@v1.0.0
  with:
    # Flowpipe CLI version to install. Defaults to "latest". Examples: latest, 0.1.0, 0.2.2.
    flowpipe-version: # optional, default is latest
    # Flowpipe credentials to create. Accepts HCL format.
    flowpipe-config: # optional
                                - name: Mergify Dependencies Conflicts Resolver
  # You may pin to the exact commit or the version.
  # uses: Mergifyio/gha-versionining-conflict-resolver@d2a39ffaa54e155f73aa388d2097fa9227974fb0
  uses: Mergifyio/gha-versionining-conflict-resolver@0.0.1
  with:
    # The full name of the head repository of the PR
    head-repo: 
    # The head branch of the PR
    head-branch: 
    # The base branch of the PR
    base-branch: # default is main
    # User associated to the token used to checkout or to the GITHUB_TOKEN (defaults to github action user)
    user: # default is github-actions
    # Email associated to the token used to checkout or to the GITHUB_TOKEN (defaults to github action email)
    email: # default is github-actions@github.com
                      - name: Create Artifact YAML
  # You may pin to the exact commit or the version.
  # uses: opencontextinc/create-artifact-yaml@218aadb9180fd982c8f2aaa592573297bdb9550e
  uses: opencontextinc/create-artifact-yaml@v1.0.1
  with:
    # Type of artifact. One of sbom, container, package, or image
    type: 
    # URL/URI of the artifact
    url: 
    # Directory to save YAML files to. If not specified then the directory oc-artifact-yaml will be used.
    directory: # optional
                      - name: Deploy a Deploy Request
  # You may pin to the exact commit or the version.
  # uses: planetscale/deploy-deploy-request-action@ddb9d1c593391e6d1601d97e8aa44e3d4ea302f9
  uses: planetscale/deploy-deploy-request-action@v4
  with:
    # The name of the database.
    database_name: 
    # The number of the deploy request to deploy. Defaults to the latest deploy request.
    number: # optional
    # The name of the organization that owns the database.
    org_name: 
    # If set to `true`, this action will wait for the deploy request to merge before exiting.
    wait: # optional
                      - name: Create Deploy Request
  # You may pin to the exact commit or the version.
  # uses: planetscale/create-deploy-request-action@21bf6790c31a5cc01cd2688fe0208847646d4901
  uses: planetscale/create-deploy-request-action@v2
  with:
    # The name of the database.
    database_name: 
    # The name of the new branch.
    branch_name: 
    # The name of the organization that owns the database.
    org_name: 
    # The target branch to merge changes into. Defaults to `main`.
    deploy_to: # optional
                      - name: Code Engine GitHub Action
  # You may pin to the exact commit or the version.
  # uses: IBM/code-engine-github-action@e7fd12ef5fd7ef8652286e9e800b2c226b393264
  uses: IBM/code-engine-github-action@v1.0.0
  with:
    # IAM API Key used to log into the IBM Cloud
    api-key: 
    # An IBM Cloud Resource Group is a logical container used to organize and manage related cloud resources
    resource-group: # optional
    # The Region refers to a geographical area where the project is are located
    region: 
    # A Code Engine Project Is the grouping of your Apps, Functions and Jobs
    project: 
    # The type of component that should be deployed [App, Function, Job]
    component: 
    # Name of the App, Function or Job
    name: 
    # Runtime used for the Function only required for function
    runtime: # optional
    # path to the directory containing the source code
    build-source: # optional, default is .
    # CPU configuration set for the component. If not set default Code Engine values are used.
    cpu: # optional
    # Memory configuration set for the component. If not set default Code Engine values are used.
    memory: # optional
                      - name: Docker promote
  # You may pin to the exact commit or the version.
  # uses: cloudposse/github-action-docker-promote@3f23f40d537fb0ef00bc5287294e3174216450e8
  uses: cloudposse/github-action-docker-promote@0.3.0
  with:
    # Organization
    organization: 
    # Repository
    repository: 
    # Docker registry
    registry: 
    # Image name (excluding registry). Defaults to {{$organization/$repository}}.
    image_name: # optional, default is 
    # Source tag
    from: # optional
    # Target tags
    to: # optional
    # Extract target tags from Git reference and GitHub events
    use_metadata: # optional, default is true
    # Docker login
    login: # optional, default is 
    # Docker password
    password: # optional, default is 
                      - name: Docker build and push
  # You may pin to the exact commit or the version.
  # uses: cloudposse/github-action-docker-build-push@51728c18e98e68a3365054e724b186912d8cbe16
  uses: cloudposse/github-action-docker-build-push@1.16.0
  with:
    # List of extra privileged entitlement (e.g., network.host,security.insecure)
    allow: # optional
    # Set the networking mode for the RUN instructions during build
    network: # optional
    # BuildKit daemon flags
    buildkitd-flags: # optional, default is --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
    # List of additional driver-specific options. (eg. image=moby/buildkit:master)
    driver-opts: # optional
    # Working directory
    workdir: # optional, default is ./
    # Dockerfile name
    file: # optional, default is Dockerfile
    # List of build-time variables
    build-args: # optional
    # Organization
    organization: 
    # Repository
    repository: 
    # Docker registry
    registry: 
    # Sets the target stage to build
    target: # optional, default is 
    # List of target platforms for build (e.g. linux/amd64,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,etc)
    platforms: # optional, default is linux/amd64
    # Generate provenance attestation for the build
    provenance: # optional
    # Image name (excluding registry). Defaults to {{$organization/$repository}}.
    image_name: # optional, default is 
    # Docker login
    login: # optional, default is 
    # Docker password
    password: # optional, default is 
    # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
    cache-from: # optional, default is type=gha
    # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
    cache-to: # optional, default is type=gha,mode=max
    # Send the --no-cache flag to the docker build process
    no-cache: # optional, default is false
    # List of SSH agent socket or keys to expose to the build
    ssh: # optional
    # List of tags (supports https://github.com/docker/metadata-action#tags-input)
    tags: # optional
    # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
    secrets: # optional
    # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
    secret-files: # optional
    # Set to `true` to tag images with the PR HEAD SHA instead of the merge commit SHA within pull requests.
    docker-metadata-pr-head-sha: # optional, default is false
    # Enable debug mode
    debug: # optional, default is false
                      - name: RegEx Issue Labeler
  uses: github/issue-labeler@v3.4
  with:
    # The GITHUB_TOKEN secret
    repo-token: # optional, default is ${{ github.token }}
    # The path to the label configuration file. If the file doesn't exist at the specified path on the runner, action will read from the source repository via the Github API.
    configuration-path: 
    # Controls if versioned regex templates are being used
    enable-versioned-regex: 
    # The regex version number to use. Only required if using versioned regex files
    versioned-regex: # optional
    # Is optional and will result in any issues prior to this timestamp to be ignored
    not-before: # optional
    # The name of the label that should be added to an issue where the specified `version-regex` can not be found.
    body-missing-regex-label: # optional
    # Include the title in the regex target
    include-title: # optional, default is 0
    # Include the body in the regex target
    include-body: # optional, default is 1
    # Remove the label from the issue if the label regex does not match
    sync-labels: # optional, default is 0
    # The number of the issue/PR to label
    issue-number: # optional, default is ${{ github.event.issue.number || github.event.pull_request.number }}
                     - name: github-issues-automation
  # You may pin to the exact commit or the version.
  # uses: Tavh/github-issues-automation@58ea35c114305d839468cfa28e28a980e1939fd6
  uses: Tavh/github-issues-automation@0.0.1
                      - name: Build CMake & MPI projects
  # You may pin to the exact commit or the version.
  # uses: amarrerod/build_cmake_mpi@37a90a376838d641d346b8c6e088c3e09d989a7c
  uses: amarrerod/build_cmake_mpi@v1.0.0
  with:
    # Build variant to use in CMake. Default: Debug
    variant: # optional
    # Includes the examples of usage. Default: False
    examples: # optional
    # Includes and run all the tests. Default: True
    tests: # optional
    # Includes coverage reporting. Default: False
    coverage: # optional
                      - name: ghtag
  # You may pin to the exact commit or the version.
  # uses: norwd/ghtag@3f6be5271729c5845596e72addc66b5e5b977ac4
  uses: norwd/ghtag@v0.1.0-beta
  with:
    # Used to authenticate with GitHub, this should be a PAT with `repo: write` permissions.
    token: # optional
    # Who the tag should be attributed to, defaults to the GitHub Actions bot.
    username: # optional
    # Who the tag should be attributed to, defaults to the GitHub Actions bot.
    email: # optional
    # The tag to create or update, e.g. `v1.2.3`.
    tag: 
    # An optional message to annotate the tag with.
    message: # optional
    # Which git object to tag, defaults to `GITHUB_REF`.
    ref: # optional
                  - name: Rational Test Automation Server GitHub Action
  # You may pin to the exact commit or the version.
  # uses: IBM/devopsauto-testserver-actions@c704855bdbbae4f0df152919d00fb0bd40f67ee0
  uses: IBM/devopsauto-testserver-actions@v1
  with:
    # Rational Test Automation Server URL
    serverUrl: 
    # Rational Test Automation Server Offline Token
    offlineToken: 
    # Team Space name
    teamspace: 
    # Project name
    project: 
    # Branch name in which the test exists
    branch: 
    # AssetId of the test in Rational Test Automation Server.
    assetId: 
    # Optional. Test environment corresponding to the test. Mandatory to input the value if you want to run API test.
    environment: # optional
    # Optional. Comma (,) delimited values of datasets for the job to run, For example: source:replacement;source:replacement
    datasets: # optional
    # Optional. Labels corresponding to the test. For example: label1, label2
    labels: # optional
    # Optional. Secrets collection name for the job to run.
    secretsCollection: # optional
    # Optional. Variables corresponding to the test. You must enter the variables in the format: name_of_the_variable=value_of_the_variable
    variables: # optional
                          - name: Docker compose tests run
  # You may pin to the exact commit or the version.
  # uses: cloudposse/github-action-docker-compose-test-run@885bb157bac4a43ff80c24bc4df852635e348a03
  uses: cloudposse/github-action-docker-compose-test-run@0.2.0
  with:
    # Working directory
    workdir: # optional, default is ./
    # Docker compose file
    file: 
    # Service run tests inside
    service: 
    # Entrypoint
    entrypoint: # optional, default is /bin/sh
    # Command to run tests
    command: 
    # Docker compose version
    docker-compose-version: # optional, default is 1.29.2
    # Docker registry
    registry: 
    # Docker login
    login: # optional, default is 
    # Docker password
    password: # optional, default is 
          
